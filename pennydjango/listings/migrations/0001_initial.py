# Generated by Django 2.2.1 on 2019-05-15 16:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import penny.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('Basics', (('central_ac', 'Central A/C'), ('doorman', 'Doorman'), ('exposed_brick', 'Exposed Brick'), ('high_ceilings', 'High Ceilings'), ('hardwood_floors', 'Hardwood Floors'), ('video_intercom', 'Video Intercom'), ('elevator', 'Elevator'), ('furnished', 'Furnished'), ('natural_light_la', 'Natural Light in Living Area'), ('washer_dryer_installed', 'Washer Dryer Installed'), ('washer_dryer_hookup', 'Washer Dryer Hookup'), ('laundry_in_building', 'Laundry in Building'), ('waterfront_view_fu', 'Waterfront View from Unit'))), ('Building', (('bike_storage', 'Bike Storage'), ('storage_space', 'Storage Space'), ('gym', 'Gym'), ('wheelchair_accessible', 'Wheelchair Accessible'), ('game_room', 'Game Room'), ('screening_room', 'Screening Room'), ('lounge', 'Lounge'), ('private_parking', 'Private Parking'), ('zipcar', 'Zipcar'), ('waterfront_view_from_roof', 'Waterfront View From Roof'), ('office_space', 'Office Space'), ('shared_workspace', 'Shared Workspace'), ('public_wifi', 'Public Wifi'))), ('Outdoors', (('outdoor_space', 'Outdoor Space'), ('common_courtyard', 'Common Courtyard'), ('private_backyard', 'Private Backyard'), ('shared_backyard', 'Shared Backyard'), ('balcony', 'Balcony'), ('terrace', 'Terrace'), ('patio', 'Patio'), ('roof_access', 'Roof Access'), ('private_roof_deck', 'Private Roof Deck'), ('skyline_view', 'Skyline View'))), ('Kitchen', (('eat_in_kitchen', 'Eat in Kitchen'), ('stainless_steel_appliances', 'Stainless Steel Appliances'), ('dishwasher', 'Dishwasher'), ('built_in_microwave', 'Built in Microwave'), ('stone_countertops', 'Stone Countertops'), ('granite_countertops', 'Granite Countertops'))), ('Luxury', (('duplex', 'Duplex'), ('children_playroom', 'Children Playroom'), ('concierge', 'Concierge'), ('playground', 'Playground'), ('spa_services', 'Spa Services'), ('basement', 'Basement'))), ('Sports', (('swimming_pool', 'Swimming Pool'), ('tennis_courts', 'Tennis Courts'), ('volleyball_courts', 'Volleyball Courts'), ('basketball_courts', 'Basketball Courts')))], max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('listing_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House')], max_length=255, verbose_name='Type')),
                ('price', models.PositiveIntegerField()),
                ('move_in_cost', models.CharField(choices=[('first_last_security', 'First, Last, and Security'), ('first_security', 'First and Security')], max_length=100)),
                ('owner_pays', models.PositiveSmallIntegerField(help_text='Private', verbose_name='Owner pays (private)')),
                ('agent_bonus', models.PositiveIntegerField(verbose_name='Agent Bonus Amount')),
                ('no_fee_listing', models.BooleanField(default=False)),
                ('utilities', models.CharField(max_length=255)),
                ('agent_notes', models.TextField(max_length=250)),
                ('description', models.TextField(max_length=500)),
                ('bedrooms', models.DecimalField(decimal_places=1, max_digits=3)),
                ('size', models.PositiveSmallIntegerField(help_text='sq.feet')),
                ('date_available', models.DateField()),
                ('term', models.CharField(max_length=100)),
                ('pets', models.CharField(choices=[('all', 'All Pets Allowed'), ('upon_approval', 'Pets Upon Approval'), ('dogs', 'Dogs Allowed'), ('small_dogs', 'Small Dogs Allowed'), ('cats', 'Cats Allowed'), ('small_pets', 'Small Pets Allowed'), ('no_pets', 'No pets allowed')], max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('geopoint', models.CharField(max_length=100)),
                ('unit_number', models.CharField(max_length=50, verbose_name='Unit Number (Only one)')),
                ('neighborhood', models.CharField(choices=[('QUEENS', (('arverne', 'Arverne'), ('astoria', 'Astoria'), ('bayside', 'Bayside'), ('beechhurst', 'Beechhurst'), ('belle_harbor/neponsit', 'Belle Harbor/Neponsit'), ('bellerose', 'Bellerose'), ('briarwood', 'Briarwood'), ('broad_channel', 'Broad Channel'), ('cambria_heights', 'Cambria Heights'), ('college_point', 'College Point'), ('corona', 'Corona'), ('douglaston', 'Douglaston'), ('east_elmhurst', 'East Elmhurst'), ('elmhurst', 'Elmhurst'), ('far_rockaway', 'Far Rockaway'), ('floral_park', 'Floral Park'), ('flushing', 'Flushing'), ('forest_hills', 'Forest Hills'), ('fresh_meadows', 'Fresh Meadows'), ('glen_oaks', 'Glen Oaks'), ('glendale', 'Glendale'), ('hillcrest', 'Hillcrest'), ('hollis', 'Hollis'), ('hollis_hills', 'Hollis Hills'), ('howard_beach', 'Howard Beach'), ('jackson_heights', 'Jackson Heights'), ('jamaica', 'Jamaica'), ('jamaica_estates', 'Jamaica Estates'), ('jamaica_hills', 'Jamaica Hills'), ('kew_gardens', 'Kew Gardens'), ('laurelton', 'Laurelton'), ('little_neck', 'Little Neck'), ('long_island_city', 'Long Island City'), ('maspeth', 'Maspeth'), ('middle_village', 'Middle Village'), ('oakland_gardens', 'Oakland Gardens'), ('ozone_park', 'Ozone Park'), ('queens_village', 'Queens Village'), ('rego_park', 'Rego Park'), ('richmond_hill', 'Richmond Hill'), ('ridgewood', 'Ridgewood'), ('rockaway_park', 'Rockaway Park'), ('rosedale', 'Rosedale'), ('south_jamaica', 'South Jamaica'), ('south_ozone_park', 'South Ozone Park'), ('springfield_gardens', 'Springfield Gardens'), ('st_albans', 'St. Albans'), ('sunnyside', 'Sunnyside'), ('whitestone', 'Whitestone'), ('woodhaven', 'Woodhaven'), ('woodside', 'Woodside'))), ('BRONX', (('baychester', 'Baychester/Co-op City'), ('bedford_park', 'Bedford Park'), ('belmont', 'Belmont'), ('bronxdale', 'Bronxdale'), ('castle_hill', 'Castle Hill'), ('city_island', 'City Island'), ('concourse_village', 'Concourse Village/Grand Concourse/Morrisania'), ('country_club', 'Country Club'), ('fieldston', 'Fieldston'), ('fordham', 'Fordham'), ('hunts_point', 'Hunts Point'), ('kingsbridge', 'Kingsbridge'), ('kingsbridge_heights', 'Kingsbridge Heights'), ('melrose', 'Melrose'), ('morris_heights', 'Morris Heights'), ('morris_park', 'Morris Park'), ('mott_haven', 'Mott Haven'), ('parkchester', 'Parkchester'), ('pelham_bay', 'Pelham Bay'), ('pelham_gardens', 'Pelham Gardens'), ('pelham_parkway', 'Pelham Parkway'), ('port_morris', 'Port Morris'), ('riverdale', 'Riverdale'), ('soundview', 'Soundview'), ('throgs_neck', 'Throgs Neck'), ('tremont', 'Tremont'), ('university_heights', 'University Heights'), ('wakefield', 'Wakefield'), ('williamsbridge', 'Williamsbridge'), ('woodlawn', 'Woodlawn'))), ('MANHATTAN', (('alphabet_city', 'Alphabet City'), ('battery_park_city', 'Battery Park City'), ('carnegie_hill', 'Carnegie Hill'), ('chelsea', 'Chelsea'), ('chinatown', 'Chinatown'), ('east_harlem', 'East Harlem'), ('east_village', 'East Village'), ('financial_district', 'Financial District'), ('flatiron_district', 'Flatiron District'), ('gramercy_park', 'Gramercy Park'), ('greenwich_village', 'Greenwich Village'), ('harlem', 'Harlem'), ('hells_kitchen', "Hell's Kitchen/Clinton"), ('inwood', 'Inwood'), ('kips_bay', 'Kips Bay'), ('lincoln_square', 'Lincoln Square'), ('lower_east_side', 'Lower East Side'), ('manhattan_valley', 'Manhattan Valley'), ('midtown_east', 'Midtown East'), ('midtown_west', 'Midtown West'), ('morningside_heights', 'Morningside Heights'), ('murray_hill', 'Murray Hill'), ('nolita/little_italy', 'NoLita/Little Italy'), ('roosevelt_island', 'Roosevelt Island'), ('soho', 'SoHo'), ('tribeca', 'Tribeca'), ('upper_east_side', 'Upper East Side'), ('upper_west_side', 'Upper West Side'), ('washington_heights', 'Washington Heights'), ('west_village', 'West Village'))), ('BROOKLYN', (('bath_beach', 'Bath Beach'), ('bay_ridge', 'Bay Ridge'), ('bedford-stuyvesant', 'Bedford-Stuyvesant'), ('bensonhurst', 'Bensonhurst'), ('bergen_beach', 'Bergen Beach'), ('boerum_hill', 'Boerum Hill'), ('borough_park', 'Borough Park'), ('brighton_beach', 'Brighton Beach'), ('brooklyn_heights', 'Brooklyn Heights'), ('brownsville', 'Brownsville'), ('bushwick', 'Bushwick'), ('canarsie', 'Canarsie'), ('carroll_gardens', 'Carroll Gardens'), ('cobble_hill', 'Cobble Hill'), ('coney_island', 'Coney Island'), ('crown_heights', 'Crown Heights'), ('cypress_hills', 'Cypress Hills'), ('downtown_brooklyn', 'Downtown Brooklyn'), ('dumbo', 'Dumbo/Vinegar Hill'), ('dyker_heights', 'Dyker Heights'), ('east_new_york', 'East New York'), ('flatbush', 'Flatbush'), ('flatlands', 'Flatlands'), ('fort_greene', 'Fort Greene/Clinton Hill'), ('gerritsen_beach', 'Gerritsen Beach'), ('gowanus', 'Gowanus'), ('gravesend', 'Gravesend'), ('greenpoint', 'Greenpoint'), ('greenwood_heights', 'Greenwood Heights'), ('manhattan_beach', 'Manhattan Beach'), ('marine_park', 'Marine Park'), ('midwood', 'Midwood'), ('mill_basin', 'Mill Basin'), ('park_slope', 'Park Slope'), ('prospect_heights', 'Prospect Heights'), ('prospect_park_south', 'Prospect Park South/Kensington'), ('red_hook', 'Red Hook'), ('sea_gate', 'Sea Gate'), ('sheepshead_bay', 'Sheepshead Bay'), ('sunset_park', 'Sunset Park'), ('williamsburg', 'Williamsburg'), ('windsor_terrace', 'Windsor Terrace'))), ('STATEN ISLAND', (('annadale', 'Annadale'), ('arden_heights', 'Arden Heights'), ('arrochar', 'Arrochar'), ('bay_street', 'Bay Street'), ('bulls_head', 'Bulls Head'), ('castleton_corners', 'Castleton Corners'), ('charleston', 'Charleston'), ('clifton', 'Clifton'), ('dongan_hills', 'Dongan Hills'), ('eltingville', 'Eltingville'), ('emerson_hill', 'Emerson Hill'), ('graniteville', 'Graniteville'), ('grant_city', 'Grant City'), ('grasmere/concord', 'Grasmere/Concord'), ('great_kills', 'Great Kills'), ('grymes_hill', 'Grymes Hill'), ('huguenot', 'Huguenot'), ('livingston', 'Livingston'), ('manor_heights', 'Manor Heights'), ('mariners_harbor', 'Mariners Harbor'), ('midland_beach', 'Midland Beach'), ('new_brighton', 'New Brighton'), ('new_dorp/new_dorp_beach', 'New Dorp/New Dorp Beach'), ('new_springville', 'New Springville'), ('oakwood', 'Oakwood'), ('pleasant_plains', 'Pleasant Plains'), ('port_richmond', 'Port Richmond'), ('princes_bay', "Prince's Bay"), ('richmondtown', 'Richmondtown'), ('rosebank', 'Rosebank'), ('rossville', 'Rossville'), ('shore_acres', 'Shore Acres'), ('silver_lake', 'Silver Lake'), ('south_beach', 'South Beach'), ('st_george', 'St. George'), ('stapleton', 'Stapleton'), ('sunnyside', 'Sunnyside'), ('todt_hill', 'Todt Hill'), ('tompkinsville', 'Tompkinsville'), ('tottenville', 'Tottenville'), ('travis', 'Travis'), ('west_new_brighton', 'West New Brighton'), ('westerleigh', 'Westerleigh'), ('willowbrook', 'Willowbrook'), ('woodrow', 'Woodrow')))], max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('not_approved', 'Not Approved')], max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listings_created', to=settings.AUTH_USER_MODEL)),
                ('listing_agent', models.ForeignKey(limit_choices_to={'user_type': 'agent'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listings', to=settings.AUTH_USER_MODEL, verbose_name='Listing Agent (Private)')),
                ('sales_agent', models.ForeignKey(limit_choices_to={'user_type': 'agent'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listings_as_sales', to=settings.AUTH_USER_MODEL, verbose_name='Sales Agent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListingPhotos',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('primary_photo', models.ImageField(null=True, upload_to=penny.utils.image_path, validators=[penny.utils.validate_file_size])),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='listings.Listing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListingPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('photo', models.ImageField(upload_to=penny.utils.image_path, validators=[penny.utils.validate_file_size])),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.ListingPhotos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListingDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('landlord_contact', models.CharField(max_length=150, verbose_name='Landlord Contact (Private)')),
                ('building_access', models.TextField(max_length=255, verbose_name='Building Access (Private)')),
                ('vacant', models.BooleanField(default=False, help_text='Only check if apartment is vacant!')),
                ('hpd', models.BooleanField(default=False, help_text='Only check if apartment is on HPD unit!')),
                ('accepts_site_apply', models.BooleanField(default=False)),
                ('listing_agreement', models.FileField(help_text='(Manhattan only) Please provide your listing agreement orcontact with the owner to prove you can post this listing', null=True, upload_to='')),
                ('floorplans', models.FileField(null=True, upload_to='')),
                ('exclusive', models.BooleanField(default=False)),
                ('private', models.BooleanField(default=False)),
                ('amenities', models.ManyToManyField(to='listings.Amenity')),
                ('listing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detail', to='listings.Listing')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
